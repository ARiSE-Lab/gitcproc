 def _get_queryset(klass):
     """
-    Returns a QuerySet from a Model, Manager, or QuerySet. Created to make
-    get_object_or_404 and get_list_or_404 more DRY.
-
-    Raises a ValueError if klass is not a Model, Manager, or QuerySet.
+    Return a QuerySet or a Manager.
+    Duck typing in action: any class with a `get()` method (for
+    get_object_or_404) or a `filter()` method (for get_list_or_404) might do
+    the job.
     """
-    if isinstance(klass, QuerySet):
-        return klass
+    # If it is a model class or anything else with ._default_manager
+    if hasattr(klass, '_default_manager'):
+        return klass._default_manager.all()
-    elif isinstance(klass, Manager):
-        manager = klass
-    elif isinstance(klass, ModelBase):
-        manager = klass._default_manager
-    else:
-        if isinstance(klass, type):
-            klass__name = klass.__name__
-        else:
-            klass__name = klass.__class__.__name__
-        raise ValueError("Object is of type '%s', but must be a Django Model, "
-                         "Manager, or QuerySet" % klass__name)
-    return manager.all()